const { session, Scenes: { BaseScene } } = require('telegraf');
const cron = require('node-schedule');
let rule = new cron.RecurrenceRule();
rule.tz = 'Europe/Kiev'; 
const { verifyDate } = require('../dateVerifier');
const { cancelKey, mainMenuKeyboard } = require('../keyboards');

const subscribeForDailyScene = new BaseScene('subscribeForDailyScene');

const cancelJob = (jobId) => {
    if (cron.scheduledJobs[jobId]) {
        let tempJob = cron.scheduledJobs[jobId];
        tempJob.cancel();
    }
}

subscribeForDailyScene.enter((ctx) => {
    if (ctx.scene.state.type === 'unSub') {
        cancelJob('DAILY_SUB');

        ctx.session.isSubscribed = false;

        ctx.reply('üíî –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø');

        return ctx.scene.enter('subscriptionScene');
    } else {
        if (ctx.scene.state.type === 'editDate'); {
            cancelJob('DAILY_SUB');
        }

        return ctx.reply('üïñ –≤–≤–µ–¥–∏ –≤—Ä–µ–º—è –≤ –∫–æ—Ç–æ—Ä–æ–µ —Ç–µ–±–µ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á—á:–º–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: \n08:00\n06:30\n21:05', cancelKey());
    }
});

subscribeForDailyScene.hears('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', async (ctx) => {
    await ctx.scene.enter('subscriptionScene');
});

subscribeForDailyScene.on('text', ctx => {
    let msg = ctx.message.text; 

    if (verifyDate(msg)) {
        ctx.session.isSubscribed = true;

        cron.scheduledJobs['DAILY_SUB'] = cron.scheduleJob(/*'DAILY_SUB', */'0 ' + msg[3] + msg[4] + ' ' + msg[0] + msg[1] + ' * * *', rule, async () => {
            return ctx.scene.enter('getHoroscopeScene', { date: 'today' });
        });

        ctx.reply('—Ö–æ—Ä–æ—à–æ, –≤ ' + msg + ' —è –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –¥–µ–Ω—å', mainMenuKeyboard());

        return ctx.scene.leave();
    } else {
        return ctx.reply('‚õî —Ç—ã –≤–≤—ë–ª –¥–∞—Ç—É –≤ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ç–∞–∫: \n08:00\n06:30\n21:05')
    }
});

module.exports.subscribeForDailyScene = subscribeForDailyScene;